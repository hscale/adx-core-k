apiVersion: v1
kind: Namespace
metadata:
  name: adx-core
  labels:
    name: adx-core
---
# API Gateway Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
  namespace: adx-core
  labels:
    app: api-gateway
    tier: gateway
spec:
  replicas: 3
  selector:
    matchLabels:
      app: api-gateway
  template:
    metadata:
      labels:
        app: api-gateway
        tier: gateway
    spec:
      containers:
      - name: api-gateway
        image: adx-core/api-gateway:latest
        ports:
        - containerPort: 8080
        env:
        - name: RUST_LOG
          value: "info"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: database-secret
              key: url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: redis-secret
              key: url
        - name: TEMPORAL_SERVER_URL
          value: "temporal:7233"
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: jwt-secret
              key: secret
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: api-gateway
  namespace: adx-core
spec:
  selector:
    app: api-gateway
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
  type: LoadBalancer
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: api-gateway-hpa
  namespace: adx-core
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: api-gateway
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
---
# Auth Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-service
  namespace: adx-core
  labels:
    app: auth-service
    tier: backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: auth-service
  template:
    metadata:
      labels:
        app: auth-service
        tier: backend
    spec:
      containers:
      - name: auth-service
        image: adx-core/auth-service:latest
        ports:
        - containerPort: 8081
        env:
        - name: RUST_LOG
          value: "info"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: database-secret
              key: url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: redis-secret
              key: url
        - name: TEMPORAL_SERVER_URL
          value: "temporal:7233"
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: jwt-secret
              key: secret
        - name: BCRYPT_COST
          value: "12"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8081
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: auth-service
  namespace: adx-core
spec:
  selector:
    app: auth-service
  ports:
  - protocol: TCP
    port: 8081
    targetPort: 8081
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: auth-service-hpa
  namespace: adx-core
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: auth-service
  minReplicas: 2
  maxReplicas: 8
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
---
# User Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-service
  namespace: adx-core
  labels:
    app: user-service
    tier: backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: user-service
  template:
    metadata:
      labels:
        app: user-service
        tier: backend
    spec:
      containers:
      - name: user-service
        image: adx-core/user-service:latest
        ports:
        - containerPort: 8082
        env:
        - name: RUST_LOG
          value: "info"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: database-secret
              key: url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: redis-secret
              key: url
        - name: TEMPORAL_SERVER_URL
          value: "temporal:7233"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8082
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 8082
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: user-service
  namespace: adx-core
spec:
  selector:
    app: user-service
  ports:
  - protocol: TCP
    port: 8082
    targetPort: 8082
---
# File Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: file-service
  namespace: adx-core
  labels:
    app: file-service
    tier: backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: file-service
  template:
    metadata:
      labels:
        app: file-service
        tier: backend
    spec:
      containers:
      - name: file-service
        image: adx-core/file-service:latest
        ports:
        - containerPort: 8083
        env:
        - name: RUST_LOG
          value: "info"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: database-secret
              key: url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: redis-secret
              key: url
        - name: TEMPORAL_SERVER_URL
          value: "temporal:7233"
        - name: S3_BUCKET
          valueFrom:
            configMapKeyRef:
              name: file-config
              key: s3-bucket
        - name: S3_REGION
          valueFrom:
            configMapKeyRef:
              name: file-config
              key: s3-region
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: aws-secret
              key: access-key-id
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: aws-secret
              key: secret-access-key
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8083
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 8083
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: file-service
  namespace: adx-core
spec:
  selector:
    app: file-service
  ports:
  - protocol: TCP
    port: 8083
    targetPort: 8083
---
# Workflow Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: workflow-service
  namespace: adx-core
  labels:
    app: workflow-service
    tier: backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: workflow-service
  template:
    metadata:
      labels:
        app: workflow-service
        tier: backend
    spec:
      containers:
      - name: workflow-service
        image: adx-core/workflow-service:latest
        ports:
        - containerPort: 8084
        env:
        - name: RUST_LOG
          value: "info"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: database-secret
              key: url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: redis-secret
              key: url
        - name: TEMPORAL_SERVER_URL
          value: "temporal:7233"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8084
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 8084
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: workflow-service
  namespace: adx-core
spec:
  selector:
    app: workflow-service
  ports:
  - protocol: TCP
    port: 8084
    targetPort: 8084
---
# Tenant Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tenant-service
  namespace: adx-core
  labels:
    app: tenant-service
    tier: backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: tenant-service
  template:
    metadata:
      labels:
        app: tenant-service
        tier: backend
    spec:
      containers:
      - name: tenant-service
        image: adx-core/tenant-service:latest
        ports:
        - containerPort: 8085
        env:
        - name: RUST_LOG
          value: "info"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: database-secret
              key: url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: redis-secret
              key: url
        - name: TEMPORAL_SERVER_URL
          value: "temporal:7233"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8085
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 8085
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: tenant-service
  namespace: adx-core
spec:
  selector:
    app: tenant-service
  ports:
  - protocol: TCP
    port: 8085
    targetPort: 8085
---
# BFF Services
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-bff
  namespace: adx-core
  labels:
    app: auth-bff
    tier: bff
spec:
  replicas: 2
  selector:
    matchLabels:
      app: auth-bff
  template:
    metadata:
      labels:
        app: auth-bff
        tier: bff
    spec:
      containers:
      - name: auth-bff
        image: adx-core/auth-bff:latest
        ports:
        - containerPort: 4001
        env:
        - name: NODE_ENV
          value: "production"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: database-secret
              key: url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: redis-secret
              key: url
        - name: TEMPORAL_SERVER_URL
          value: "temporal:7233"
        - name: API_GATEWAY_URL
          value: "http://api-gateway:8080"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 4001
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 4001
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: auth-bff
  namespace: adx-core
spec:
  selector:
    app: auth-bff
  ports:
  - protocol: TCP
    port: 4001
    targetPort: 4001
---
# ConfigMaps and Secrets
apiVersion: v1
kind: ConfigMap
metadata:
  name: file-config
  namespace: adx-core
data:
  s3-bucket: "adx-core-files-prod"
  s3-region: "us-west-2"
---
apiVersion: v1
kind: Secret
metadata:
  name: database-secret
  namespace: adx-core
type: Opaque
data:
  url: # Base64 encoded database URL
---
apiVersion: v1
kind: Secret
metadata:
  name: redis-secret
  namespace: adx-core
type: Opaque
data:
  url: # Base64 encoded Redis URL
---
apiVersion: v1
kind: Secret
metadata:
  name: jwt-secret
  namespace: adx-core
type: Opaque
data:
  secret: # Base64 encoded JWT secret
---
apiVersion: v1
kind: Secret
metadata:
  name: aws-secret
  namespace: adx-core
type: Opaque
data:
  access-key-id: # Base64 encoded AWS access key ID
  secret-access-key: # Base64 encoded AWS secret access key